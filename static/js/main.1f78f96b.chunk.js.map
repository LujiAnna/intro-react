{"version":3,"sources":["Components/Todo.js","Components/Form.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","rows","todosData","map","row","index","todo","completed","onClick","removeTodo","className","Form","useState","show","input","setInput","onSubmit","e","preventDefault","console","log","handleSubmit","type","name","id","value","onChange","target","key","placeholder","addTodoInput","Header","App","todos","setTodos","filter","i","inputTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAqBeA,EAlBF,SAACC,GACR,IAAMC,EAAOD,EAAME,UAAUC,KAAI,SAACC,EAAKC,GACtC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,YACR,6BAAI,wBAAQC,QAAS,kBAAMR,EAAMS,WAAWJ,IAAxC,uBAHGA,MAQjB,OACE,uBAAOK,UAAU,qBAAjB,SACGT,KCkCQU,EA7CF,SAACX,GAAW,IAAD,EAEIY,mBAAS,CACjCN,KAAM,GACNO,KAAM,KAJc,mBAEfC,EAFe,KAERC,EAFQ,KAgCtB,OACE,qBAAKL,UAAU,YAAf,SACC,uBAAMM,SAAU,SAACC,IAfC,SAACA,GACpBA,EAAEC,iBACFC,QAAQC,IAAI,qBAacC,CAAaJ,IAAtC,UACG,gCACE,uBAAOK,KAAK,OAAOC,KAAK,OAAOC,GAAI,OAAOC,MAAOX,EAAMR,KAAMoB,SA7BhD,SAACT,GACpBE,QAAQC,IAAIH,EAAEU,QADY,MAELV,EAAEU,OAAXF,GAFc,EAEnBG,IAFmB,EAEdH,OACXN,QAAQC,IAAIL,EAAS,CAClBT,KAAMmB,KAGXV,EAAS,CACJT,KAAMmB,KAqBiFI,YAAY,mBAElG,uBAAOP,KAAK,SAASG,MAAM,OAAOjB,QAdtB,WACnBR,EAAM8B,aAAahB,GAClBC,EAAS,CACPT,KAAM,GACNO,KAAM,cCtBIkB,EARA,SAAC/B,GACd,OACE,iCACC,yCAAYA,EAAMuB,WCyBRS,EAzBH,WAAO,IAAD,EACUpB,mBAAS,IADnB,mBACTqB,EADS,KACFC,EADE,KAgBhB,OACE,sBAAKxB,UAAU,MAAf,UACM,cAAC,EAAD,CAAQa,KAAK,SACb,cAAC,EAAD,CAAMrB,UAAa+B,EAAOxB,WAjBX,SAACJ,GAClBc,QAAQC,IAAIa,EAAME,QAAO,SAAC7B,EAAM8B,GAC5B,OAAOA,IAAM/B,MAEf6B,EAASD,EAAME,QAAO,SAAC7B,EAAM8B,GAC3B,OAAOA,IAAM/B,SAaf,cAAC,EAAD,CAAMyB,aARQ,SAACO,GACjBH,EAAS,GAAD,mBAAMD,GAAN,CAAaI,YCPdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1f78f96b.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\nconst Todo = (props) => {\n      const rows = props.todosData.map((row, index) => {\n       return (\n         <tr key ={index}>\n           <td>{row.todo}</td>\n           <td>{row.completed}</td>\n            <td><button onClick={() => props.removeTodo(index)}>Clear</button></td>\n           </tr>\n       );     \n      })\n\n  return (\n    <table className=\"container todoList\">\n      {rows}\n    </table>\n  );\n}\n\nexport default Todo;","// import logo from './logo.svg';\n// import './App.css';\nimport React,  {useState} from 'react';\n\n//  Add Form\nconst Form = (props) => {\n\n  const [input, setInput] = useState({\n    todo: '', \n    show: ''  \n  }); \n\n  const handleChange = (e) => {\n    console.log(e.target);\n    const {key, value} = e.target;\n     console.log(setInput({\n        todo: value\n     })) \n\n   setInput({\n        todo: value\n     })\n  } \n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('You clicked save.');\n  }\n\n  const submitForm = () => {\n  props.addTodoInput(input);\n   setInput({\n     todo: '', \n     show: ''  \n   });\n }\n\n  return (\n    <div className=\"container\">\n     <form onSubmit={(e) => { handleSubmit(e);}}>\n        <label>\n          <input type=\"text\" name=\"todo\" id =\"todo\" value={input.todo} onChange={handleChange} placeholder='New Todo ...'/>\n        </label>\n         <input type=\"button\" value=\"Save\" onClick={submitForm}/>\n     </form>  \n\n    </div>\n  );\n}\n\nexport default Form;\n","import '../App.css';\nimport React from 'react'\n\nconst Header = (props) => {\n  return (\n    <header>\n     <h1>Hello, {props.name}</h1>   \n    </header>\n  );\n}\n\nexport default Header;\n\n","import React,  {useState, useEffect} from 'react';\nimport './App.css';\nimport Todo from './Components/Todo.js';\nimport Form from './Components/Form.js';\nimport Header from './Components/Header.js';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n      const removeTodo = (index) => {    \n        console.log(todos.filter((todo, i) => {\n            return i !== index\n            }));\n          setTodos(todos.filter((todo, i) => {\n            return i !== index\n           }),\n          )\n      }\n\n   const addTodoInput = (inputTodo) => {\n        setTodos([... todos, inputTodo]);\n  }\n \n  return (\n    <div className=\"App\">\n          <Header name=\"Anna\" />\n          <Todo todosData = {todos} removeTodo={removeTodo} />\n          <Form addTodoInput={addTodoInput} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}